class Solution {
    static int minimumNumberOfDeletions(String S) {
        int n = S.length();

        // Create a 2D table to store the minimum number of deletions
        // required to make the substring from i to j a palindrome.
        int[][] dp = new int[n][n];

        for (int l = 2; l <= n; l++) {
            for (int i = 0; i < n - l + 1; i++) {
                int j = i + l - 1;
                if (S.charAt(i) == S.charAt(j)) {
                    dp[i][j] = dp[i + 1][j - 1];
                } else {
                    dp[i][j] = 1 + Math.min(dp[i + 1][j], dp[i][j - 1]);
                }
            }
        }

        // The minimum number of deletions to make the entire string a palindrome
        // is stored in dp[0][n-1].
        return dp[0][n - 1];
    }
}
